{"version":3,"sources":["C:/Users/sanek/test-one/src/$_lazy_route_resource lazy","C:/Users/sanek/test-one/src/app/app.component.css","C:/Users/sanek/test-one/src/app/app.component.html","C:/Users/sanek/test-one/src/app/app.component.ts","C:/Users/sanek/test-one/src/app/app.module.ts","C:/Users/sanek/test-one/src/environments/environment.ts","C:/Users/sanek/test-one/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,yF;;;;;;;ACVA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,0vBAA0vB,WAAW,yBAAyB,YAAY,qH;;;;;;;;;;;;;;;;;ACAhwB;AAE1C;IAKI,cAAY,IAAY,EAAE,KAAa;QACnC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACtB,CAAC;IACL,WAAC;AAAD,CAAC;;AAQD;IANA;QAOI,UAAK,GAAW;YACZ,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;YACxC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;YACtC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;YACzC,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;SAC9C,CAAC;IAON,CAAC;IALG,8BAAO,GAAP,UAAQ,IAAY,EAAE,KAAa;QAC/B,EAAE,EAAC,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,SAAS,IAAI,KAAK,IAAI,SAAS,CAAC;YACxE,MAAM,CAAC;QACX,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IAC3C,CAAC;IAZQ,YAAY;QANxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OAEW,YAAY,CAaxB;IAAD,mBAAC;CAAA;AAbwB;;;;;;;;;;;;;;;;;;;;ACpBiC;AACjB;AACI;AAGE;AAc/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;ACnBtB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,8EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/sanek/test-one/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/sanek/test-one/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n    <h1>Список покупок</h1>\\n    <hr>\\n    <div class=\\\"form-inline\\\">\\n        <div class=\\\"form-group\\\">\\n            <input [(ngModel)]=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Название\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <input [(ngModel)]=\\\"price\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Цена\\\">\\n        </div>\\n        <button (click)=\\\"addItem(name, price)\\\" class=\\\"btn btn-default\\\">Добавить</button>\\n    </div>\\n    <hr>\\n    <table class=\\\"table table-striped\\\">\\n        <tr>\\n            <th>Предмет</th>\\n            <th>Цена</th>\\n            <th>Куплено</th>\\n        </tr>\\n        <tr *ngFor=\\\"let item of items\\\">\\n            <td>{{item.name}}</td>\\n            <td>{{item.price}}</td>\\n            <td><input type=\\\"checkbox\\\" [(ngModel)]=\\\"item.done\\\"></td>\\n        </tr>\\n    </table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/sanek/test-one/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\nexport class Item {\n    name: string;\n    price: number;\n    done: boolean;\n    \n    constructor(name: string, price: number){\n        this.name = name;\n        this.price = price;\n        this.done = false;\n    }\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n    items: Item[] = [\n        { name: \"Хлеб\", price: 15, done: false },\n        { name: \"Сыр\", price: 25, done: true },\n        { name: \"Гречка\", price: 45, done: true },\n        { name: \"Колбаса\", price: 65, done: false }\n    ];\n    \n    addItem(name: string, price: number): void {\n        if(name == null || price == null || name == undefined || price == undefined)\n            return;\n        this.items.push(new Item(name, price));\n    }\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/sanek/test-one/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/sanek/test-one/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/sanek/test-one/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/sanek/test-one/src/main.ts"],"sourceRoot":"webpack:///"}